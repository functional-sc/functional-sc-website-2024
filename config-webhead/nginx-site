##
# You should look at the following URL's in order to grasp a solid understanding
# of Nginx configuration files in order to fully unleash the power of Nginx.
# https://www.nginx.com/resources/wiki/start/
# https://www.nginx.com/resources/wiki/start/topics/tutorials/config_pitfalls/
# https://wiki.debian.org/Nginx/DirectoryStructure
#
# In most cases, administrators will remove this file from sites-enabled/ and
# leave it as reference inside of sites-available where it will continue to be
# updated by the nginx packaging team.
#
# This file will automatically load configuration files provided by other
# applications, such as Drupal or Wordpress. These applications will be made
# available underneath a path with that package name, such as /drupal8.
#
# Please see /usr/share/doc/nginx-doc/examples/ for more detailed examples.
##

# Default server configuration
#
server {
	listen 80;
	listen [::]:80;
	server_name functional.sc;
	return 302 https://www.functional.sc$request_uri;
}

server {
	server_name wwww.functional.sc;

	listen 443 ssl;
	listen [::]:443 ssl;

 	ssl_certificate     /etc/ssl/certs/www.functional.sc.crt;
	ssl_certificate_key /etc/ssl/private/www.functional.sc.key;

	root /var/www/html;

	location / {
		try_files $uri $uri/ =404;
	}

        # rewrite for human-friendly landing pages
	location = /ulisp {
		return 302 https://www.functional.sc/#/page/ulisp ;
	}

	location = /tech {
		return 302 https://www.functional.sc/#/page/knowledge%20graph%20sharing ;
	}

	location = /haskell {
		return 302 https://www.functional.sc/#/page/haskell ;
	}

	location = /haskel {
		return 302 https://www.functional.sc/#/page/haskell ;
	}

	location = /clojure {
		return 302 https://www.functional.sc/#/page/clojure ;
	}

	location = /lean {
		return 302 https://functional.sc/#/page/lean%20proof%20assistant%20series ;
	}

	location = /heow {
		return 302 https://www.functional.sc/#/page/heow%20goodman ;
	}

	location = /jared {
		return 302 https://www.functional.sc/#/page/jared%20corduan ;
	}

}
